import { test, expect } from '@bgotink/playwright-coverage';

test.describe.serial('Tests e2e en ordre suivi', () => {
  
  test('Test Register et abonnement', async ({ page }) => { 
  
  await page.goto('http://localhost:4200/');
  await expect(page.getByRole('img', { name: 'LOGO', exact: true })).toBeVisible();
  await expect(page.getByRole('img', { name: 'logo', exact: true })).toBeVisible();
  await expect(page.getByRole('button', { name: 'Se connecter' })).toBeVisible();
  await expect(page.getByRole('button', { name: 'S\'inscrire' })).toBeVisible();
  await page.getByRole('button', { name: 'S\'inscrire' }).click();
  await expect(page.getByRole('img', { name: 'LOGO' })).toBeVisible();
  await expect(page.getByRole('heading', { name: 'Inscription' })).toBeVisible();
  await expect(page.getByText('Nom d\'utilisateur :')).toBeVisible();
  await expect(page.getByRole('textbox', { name: 'Nom d\'utilisateur :' })).toBeVisible();
  await expect(page.getByText('Adresse e-mail :')).toBeVisible();
  await expect(page.getByRole('textbox', { name: 'Adresse e-mail :' })).toBeVisible();
  await expect(page.getByText('Mot de passe :')).toBeVisible();
  await expect(page.getByRole('textbox', { name: 'Mot de passe :' })).toBeVisible();
  await expect(page.getByRole('button', { name: 'S\'inscrire' })).toBeVisible();
  await page.getByRole('textbox', { name: 'Nom d\'utilisateur :' }).click();
  await page.getByRole('textbox', { name: 'Nom d\'utilisateur :' }).fill('UtilisateurTest');
  await page.getByRole('textbox', { name: 'Adresse e-mail :' }).click();
  await page.getByRole('textbox', { name: 'Adresse e-mail :' }).fill('UtilisateurTest@test.com');
  await page.getByRole('textbox', { name: 'Mot de passe :' }).click();
  await page.getByRole('textbox', { name: 'Mot de passe :' }).fill('M0t_DePasse');
  await page.getByRole('button', { name: 'S\'inscrire' }).click();
  await expect(page.getByRole('img', { name: 'LOGO' })).toBeVisible();
  await expect(page.getByRole('button', { name: 'Retour' })).toBeVisible();
  await expect(page.getByRole('heading', { name: 'Se connecter' })).toBeVisible();
  await expect(page.getByText('E-mail ou nom d\'utilisateur :')).toBeVisible();
  await expect(page.getByRole('textbox', { name: 'E-mail ou nom d\'utilisateur :' })).toBeVisible();
  await expect(page.getByText('Mot de passe :')).toBeVisible();
  await expect(page.getByRole('textbox', { name: 'Mot de passe :' })).toBeVisible();
  await expect(page.getByRole('button', { name: 'Se connecter' })).toBeVisible();
});

test('Test Login and Profile', async ({ page }) => {
  await page.goto('http://localhost:4200/');
  await page.getByRole('button', { name: 'Se connecter' }).click();
  await expect(page).toHaveURL('http://localhost:4200/login');
  await page.getByRole('textbox', { name: 'E-mail ou nom d\'utilisateur :' }).click();
  await page.getByRole('textbox', { name: 'E-mail ou nom d\'utilisateur :' }).fill('UtilisateurTest');
  await page.getByRole('textbox', { name: 'Mot de passe :' }).click();
  await page.getByRole('textbox', { name: 'Mot de passe :' }).fill('M0t_DePasse');
  await page.getByRole('button', { name: 'Se connecter' }).click();
  await expect(page).toHaveURL('http://localhost:4200/article/abonnes');
  await expect(page.getByRole('navigation')).toBeVisible();
  await expect(page.getByRole('img', { name: 'LOGO' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Se déconnecter' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Articles' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Thèmes' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Profil' })).toBeVisible();
  await page.getByRole('link', { name: 'Thèmes' }).click();
  await expect(page.getByText('Titre du thème 1 Content:')).toBeVisible();
  await expect(page.locator('div').filter({ hasText: 'Titre du thème 1 Content:' }).first()).toBeVisible();
  await expect(page.getByText('Titre du thème 1')).toBeVisible();
  await expect(page.locator('.theme-description').first()).toBeVisible();
  await expect(page.locator('.mat-focus-indicator').first()).toBeVisible();
  await page.locator('.mat-focus-indicator').first().click();
  await page.getByRole('button', { name: 'S\'abonner' }).nth(2).click();
  await expect(page.getByRole('button', { name: 'S\'abonner' }).first()).toBeVisible();
  await expect(page.getByRole('link', { name: 'Thèmes' })).toBeVisible();
  await page.getByRole('link', { name: 'Profil' }).click();
  await expect(page.getByRole('heading', { name: 'Profil utilisateur' })).toBeVisible();
  await expect(page.locator('input[formcontrolname="username"]')).toBeVisible();
  await expect(page.locator('input[formcontrolname="email"]')).toBeVisible();;
  await expect(page.locator('input[formcontrolname="password"]')).toBeVisible();
  await expect(page.getByRole('button', { name: 'Mettre à jour' })).toBeVisible();
  await expect(page.getByRole('heading', { name: 'Mes abonnements' })).toBeVisible();
  await expect(page.getByText('Titre du thème 1')).toBeVisible();
  await expect(page.getByText('Titre du thème 1 Content:')).toBeVisible();
  await expect(page.getByText('Content: lorem ipsum is').first()).toBeVisible();
  await expect(page.getByRole('button', { name: 'Se désabonner' }).first()).toBeVisible();
  await page.getByRole('button', { name: 'Se désabonner' }).first().click();
  await page.getByRole('link', { name: 'Thèmes' }).click();
  await expect(page.getByText('Titre du thème 1 Content:')).toBeVisible();
  await expect(page.getByText('Titre du thème 1')).toBeVisible();
  await page.getByRole('button', { name: 'S\'abonner' }).first().click();
  await page.getByRole('link', { name: 'Profil' }).click();
  await page.getByTestId('username').click();
  await page.getByTestId('username').fill('UtilisateurTestModified');
  await expect(page.getByTestId('username')).toHaveValue('UtilisateurTestModified');
  await page.getByTestId('email').click();
  await page.getByTestId('email').fill('UtilisateurTestModified@test.com');
  await expect(page.getByTestId('email')).toHaveValue('UtilisateurTestModified@test.com');
  await page.getByTestId('password').click();
  await page.getByTestId('password').fill('M0t_DePasse');
  await expect(page.getByTestId('password')).toHaveValue('M0t_DePasse');
  await page.getByRole('button', { name: 'Mettre à jour' }).click();
  await expect(page).toHaveURL('http://localhost:4200');
});

test('Test Login, Articles et commentaires', async ({ page }) => {
  await page.goto('http://localhost:4200/');
  await page.getByRole('button', { name: 'Se connecter' }).click();
  await page.getByRole('textbox', { name: 'E-mail ou nom d\'utilisateur :' }).click();
  await page.getByRole('textbox', { name: 'E-mail ou nom d\'utilisateur :' }).fill('UtilisateurTestModified');
  await page.getByRole('textbox', { name: 'Mot de passe :' }).click();
  await page.getByRole('textbox', { name: 'Mot de passe :' }).fill('M0t_DePasse');
  await page.getByRole('button', { name: 'Se connecter' }).click();
  await expect(page).toHaveURL('http://localhost:4200/article/abonnes');
  await expect(page.getByRole('img', { name: 'LOGO' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Se déconnecter' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Articles' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Thèmes' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Profil' })).toBeVisible();
  await expect(page.getByText('Créer un article Trier')).toBeVisible();
  await expect(page.getByRole('button', { name: 'Créer un article' })).toBeVisible();
  await expect(page.getByText('Trier par')).toBeVisible();
  await expect(page.getByRole('button', { name: 'Inverser l\'ordre' })).toBeVisible();
  await expect(page.locator('div').filter({ hasText: 'Titre article 4' }).first()).toBeVisible();
  await expect(page.getByText('Titre article 4')).toBeVisible();
  await expect(page.getByText('Date 6/25/25, 4:56 PM').first()).toBeVisible();
  await expect(page.getByText('Content: lorem ipsum is').first()).toBeVisible();
  await expect(page.getByText('Titre article 1')).toBeVisible();
  await page.getByRole('button', { name: 'Inverser l\'ordre' }).click();
  await expect(page.getByText('Titre article 1')).toBeVisible();
  await expect(page.getByText('Date 6/25/25, 4:56 PM').first()).toBeVisible();
  await expect(page.getByText('Content: lorem ipsum is').first()).toBeVisible();
  await expect(page.getByText('Titre article 4')).toBeVisible();
  await page.getByRole('button', { name: 'Inverser l\'ordre' }).click();
  await expect(page.getByText('Titre article 4')).toBeVisible();
  await expect(page.getByText('Date 6/25/25, 4:56 PM').first()).toBeVisible();
  await expect(page.getByText('Content: lorem ipsum is').first()).toBeVisible();
  await page.getByRole('button', { name: 'Créer un article' }).click();
  await expect(page).toHaveURL('http://localhost:4200/article');
  await expect(page.getByRole('img', { name: 'LOGO' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Se déconnecter' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Articles' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Thèmes' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Profil' })).toBeVisible();
  await expect(page.getByRole('button', { name: 'Retour' })).toBeVisible();
  await expect(page.getByRole('heading', { name: 'Créer un nouvel article' })).toBeVisible();
  await expect(page.getByText('Thème :')).toBeVisible();
  await expect(page.getByLabel('Thème :')).toBeVisible();
  await expect(page.getByText('Titre :')).toBeVisible();
  await expect(page.getByText('Contenu :')).toBeVisible();
  await expect(page.getByRole('textbox', { name: 'Contenu :' })).toBeVisible();
  await expect(page.getByRole('button', { name: 'Créer l\'article' })).toBeVisible();
  const select = page.getByLabel('Thème :');
// Récupère la valeur de l'option dont le texte est "Titre du thème 1"
  const value = await select.locator('option', { hasText: 'Titre du thème 1' }).getAttribute('value');
  await select.selectOption(value!);
  await page.getByRole('textbox', { name: 'Titre :' }).click();
  await page.getByRole('textbox', { name: 'Titre :' }).fill('Titre Test');
  await page.getByRole('textbox', { name: 'Contenu :' }).click();
  await page.getByRole('textbox', { name: 'Contenu :' }).fill('Contenu Test');
  await page.getByRole('button', { name: 'Créer l\'article' }).click();
  await expect(page.getByText('Article créé avec succès !')).toBeVisible();
  await page.getByRole('button', { name: 'Retour' }).click();
  await expect(page.getByText('Titre Test')).toBeVisible();
  //await expect(page.getByText('Date 6/24/25,')).toBeVisible();
  await expect(page.getByText('Contenu Test')).toBeVisible();
  await page.getByText('Titre Test').click();
  await expect(page.getByRole('img', { name: 'LOGO' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Se déconnecter' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Thèmes' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Profil' })).toBeVisible();
  await expect(page.getByRole('button', { name: 'Retour' })).toBeVisible();
  await expect(page.getByRole('heading', { name: 'Titre Test' })).toBeVisible();
  await expect(page.getByText('Auteur')).toBeVisible();
  await expect(page.getByText('Contenu Test')).toBeVisible();
  await expect(page.getByRole('heading', { name: 'Commentaires' })).toBeVisible();
  await expect(page.getByText('Aucun commentaire pour cet')).toBeVisible();
  await expect(page.getByRole('heading', { name: 'Ajouter un commentaire' })).toBeVisible();
  await expect(page.getByRole('textbox', { name: 'Écrivez ici votre commentaire' })).toBeVisible();
  await page.getByRole('textbox', { name: 'Écrivez ici votre commentaire' }).click();
  await page.getByRole('textbox', { name: 'Écrivez ici votre commentaire' }).fill('Commentaire test');
  await page.getByRole('button', { name: 'Envoyer' }).click();
  await expect(page.locator('div').filter({ hasText: 'UtilisateurTestModifiedCommentaire test' }).nth(2)).toBeVisible();
  await expect(page.getByText('UtilisateurTestModified', { exact: true })).toBeVisible();
  await expect(page.getByText('Commentaire test')).toBeVisible();
  await expect(page.getByText('Commentaire ajouté !')).toBeVisible();
  await page.getByRole('link', { name: 'Se déconnecter' }).click();
});

test('Test controles Login et register', async ({ page }) => {
  await page.goto('http://localhost:4200/');
  await page.getByRole('button', { name: 'Se connecter' }).click();
  await page.getByRole('textbox', { name: 'E-mail ou nom d\'utilisateur :' }).click();
  await page.getByRole('textbox', { name: 'Mot de passe :' }).click();
  await page.getByRole('textbox', { name: 'Mot de passe :' }).fill('M0t_Dpasse');
  await page.getByRole('button', { name: 'Se connecter' }).click();
  await expect(page.getByText('Champ requis')).toBeVisible();
  await expect(page.getByRole('heading', { name: 'Se connecter' })).toBeVisible();
  await page.getByRole('textbox', { name: 'E-mail ou nom d\'utilisateur :' }).click();
  await page.getByRole('textbox', { name: 'E-mail ou nom d\'utilisateur :' }).fill('Utilisateur1');
  await page.getByRole('textbox', { name: 'Mot de passe :' }).click();
  await page.getByRole('textbox', { name: 'Mot de passe :' }).fill('');
  await page.getByRole('button', { name: 'Se connecter' }).click();
  await expect(page.getByText('Champ requis')).toBeVisible();
  await page.getByRole('textbox', { name: 'Mot de passe :' }).click();
  await page.getByRole('textbox', { name: 'Mot de passe :' }).fill('fakepassword');
  await page.getByRole('button', { name: 'Se connecter' }).click();
  await expect(page.getByRole('heading', { name: 'Se connecter' })).toBeVisible();
  await page.getByRole('textbox', { name: 'Mot de passe :' }).click();
  await page.getByRole('textbox', { name: 'Mot de passe :' }).fill('M0t_De_Passe');
  await page.getByRole('button', { name: 'Se connecter' }).click();
  await page.getByRole('link', { name: 'Se déconnecter' }).click();
  await page.getByRole('button', { name: 'S\'inscrire' }).click();
  await page.getByRole('textbox', { name: 'Adresse e-mail :' }).click();
  await page.getByRole('textbox', { name: 'Adresse e-mail :' }).fill('fake@test.com');
  await page.getByRole('textbox', { name: 'Mot de passe :' }).click();
  await page.getByRole('textbox', { name: 'Mot de passe :' }).fill('Mot_De_Passe');
  await page.getByRole('button', { name: 'S\'inscrire' }).click();
  await expect(page.locator('div').filter({ hasText: 'Nom d\'utilisateur :Champ' }).locator('div')).toBeVisible();
  await expect(page.getByText('Le mot de passe doit contenir')).toBeVisible();
  await page.getByRole('textbox', { name: 'Nom d\'utilisateur :' }).click();
  await page.getByRole('button', { name: 'Retour' }).click();
  await page.getByRole('button', { name: 'Se connecter' }).click();
  await page.getByRole('button', { name: 'Retour' }).click();
});

});